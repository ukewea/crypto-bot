stages:
  - pub-s-arch
  - pub-m-arch

variables:
  TAG_LATEST: latest
  TAG_COMMIT: $CI_COMMIT_SHORT_SHA
  REPO_CI: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME
  REPO_CI_AMD64: ${REPO_CI}-amd64
  REPO_CI_ARM64: ${REPO_CI}-arm64
  IMG_NAME_CI_COMMIT_AMD64: ${REPO_CI_AMD64}:${TAG_COMMIT}
  IMG_NAME_CI_LATEST_AMD64: ${REPO_CI_AMD64}:${TAG_LATEST}
  IMG_NAME_CI_COMMIT_ARM64: ${REPO_CI_ARM64}:${TAG_COMMIT}
  IMG_NAME_CI_LATEST_ARM64: ${REPO_CI_ARM64}:${TAG_LATEST}
  CONTAINER_NAME: crypto-bot

image:
  name: gcr.io/kaniko-project/executor:v1.9.1-debug
  entrypoint: [""]

pub_amd64:
  stage: pub-s-arch
  needs: []
  tags:
    - linux
    - amd64
    - docker
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "$IMG_NAME_CI_COMMIT_AMD64"
      --destination "$IMG_NAME_CI_LATEST_AMD64"

pub_arm64:
  stage: pub-s-arch
  needs: []
  tags:
    - linux
    - arm64
    - docker
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "$IMG_NAME_CI_COMMIT_ARM64"
      --destination "$IMG_NAME_CI_LATEST_ARM64"

pub_multiarch:
  stage: pub-m-arch
  image: 
    name: mplatform/manifest-tool:alpine
    entrypoint: [""]
  tags:
    - linux
    - docker
  needs: [pub_amd64, pub_arm64]
  script:
    - /manifest-tool --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD 
      push from-args 
        --platforms linux/amd64,linux/arm64 
        --template ${REPO_CI}-ARCH:${TAG_LATEST} 
        --target ${REPO_CI}:${TAG_LATEST}
    - /manifest-tool --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD 
      push from-args 
        --platforms linux/amd64,linux/arm64 
        --template ${REPO_CI}-ARCH:${TAG_COMMIT} 
        --target ${REPO_CI}:${TAG_COMMIT}
